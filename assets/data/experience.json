{
    "experience": [
        {
            "title": "RESTful Web Services",
            "highlights": [
                "Designed and built REST interfaces with request and response objects and made them available in common libraries for service providers and service consumers to use.",
                "Using Spring Boot, developed web service applications which provided multiple resources and operations enabling a customer to view the state of their loyalty accounts and to take actions within the loyalty program.",
                "Designed and developed web services which enabled customers to view their aggregated earnings, transaction and reward details, take action to activate their offers, opt out of a specific offer, and opt out of the entire program.",
                "Designed and developed web services which enabled customer service representatives to help resolve customer inqueries with web services which provided an enhanced view of a customers transactions and rewards, offer activation history, and the ability to provide curtesy credits.",
                "Closely worked with DBAs and helped develop stored procedures and queries for use by the web services.",
                "Enabled and trained quality assurance specialists to ensure web services were completely functionally tested and ready for integration testing.",
                "Closely worked with performance testers and DBAs to build out testing solution, service responders, and complete data conditioning.",
                "Diagnosed and fixed performance issues found during performance testing to ensure acceptable service response times.",
                "Integrated with other service providers to consume web services to meet business requirements",
                "Developed and added metric and monitoring capabilities to appications: Exported logs to Splunk, integrated App Dynamics and Dynatrace, provided exceptional application and server logging, and provided health check endpoints which enabled production support to effectively monitor the application health and triage any errors/exceptions ensuring high availability."
            ],
            "technologies": "HTTP, HTTPS, TLS, mutual TLS, Spring Boot, Spring Webflux, Spring REST, JBoss, JSON, XML, Serdes, Object modeling, SAML",
            "iconUrl": "assets/images/rest.PNG",
            "iconAltTxt": "REST logo"
        },
        {
            "title": "Event Based Processing/Messaging Technologies",
            "highlights": [
                "Designed and developed event schemas using Avro and registered schemas on Kafka schema registry using the Kafka schema registry API for topic/subject keys and values.",
                "Created Kafka topics with appropriate partition count, retention period, clean up policy, and other configurations as required.",
                "Developed and configured Kafka producers using specific record objects for Avro serdes.",
                "Developed and configured Kafka consumers using specific record objects for Avro serdes.",
                "Designed, developed, posted, and debugged Kafka connector configurations using the Kafka Connect API.",
                "Developed idempotent, event based microservices using a series of simple Kafka consumers.",
                "Enabled accurate monitoring of Kafka consumer/stream thread health using Spring Actuator and enhancing health checks to consider the state of the Kafka consumer/stream threads and to report down when threads have shutdown.",
                "Configured source and Debezium Kafka connectors to stream data changes from our relational database."
            ],
            "technologies": "Kafka Consumer API, Kafka Producer API, Kafka Streams, Kafka Connect, Avro, Kafka Schema Registry, Message Que, Spring Kafka",
            "iconUrl": "assets/images/kafka.PNG",
            "iconAltTxt": "Kafka logo"
        },
        {
            "title": "Relational Database Development",
            "highlights": [
                "Helped develop, update, and optimize database stored procedures, functions, table-value functions, views, etc.",
                "Helped test and debug database stored procedures and functions.",
                "Collaborated with DBAs to design and build end-to-end solutions to satisfy business requirements.",
                "Participated in database code reviews/pull requests.",
                "Called/excecuted stored procedures and read from views programmatically and processed returned result set using the appropriate database driver.",
                "Configured application's datasource and database connection pool.",
                "Developed repository interfaces and implementations to read from and write to databases.",
                "Implemented Kafka joins to bring together multiple related Kafka topic events into a single view/event."
            ],
            "technologies": "Oracle, SQL Server, MySql, DDL, DML, H2, JPA, JDBC, Spring Data",
            "iconUrl": "assets/images/database.PNG",
            "iconAltTxt": "Database logo"
        },
        {
            "title": "Front-end Development/UI/UX",
            "highlights": [
                "Designed, developed, and maintained Angular applications.",
                "Enabled user input via forms to view, search, and modify data by consuming various RESTful APIs.",
                "Closely worked with the line of business and UX designers to create and clean, \"don't make me think\" UX.",
                "Ensure ADA compliance enabling all users access to the resources and content provided.",
                "Supported QA in functional, integration, and performance testing.",
                "Ensured adaptive UI works with a variety of form factors."
            ],
            "technologies": "HTML, CSS, SCSS, Angular, Javascript, Typescript",
            "iconUrl": "assets/images/angular.PNG",
            "iconAltTxt": "Database logo"
        },
        {
            "title": "NoSQL/In Memory Data",
            "highlights": [
                "Experience using the Lettuce and Jedis Redis clients/libraries to maintain key spaces and indexes in redis.",
                "Designed key spaces to meet business requirements for the presentation layer and to reduce the space and number of shards required to operate.",
                "Used Redis JSON to store and manipulate JSON objects in Redis.",
                "Used geospacial indeces to serve customers offers within a specific geographical radius.",
                "Leveraged Redis with Change Data Capture (CDC) MSSQL functionality and Kafka Debezium Connectors to ensure our Redis keyspaces remained in sync with our relational datastore.",
                "Programmatically maintained multiple keys and keyspaces using a variety of datatypes such as sets, sorted sets, strings, JSON, etc."
            ],
            "technologies": "Redis",
            "iconUrl": "assets/images/redis.PNG",
            "iconAltTxt": "Redis logo"
        },
        {
            "title": "Dependency Management",
            "highlights": [
                "Configured build scripts (build.gradle) to pull in required plugins and dependencies from Artifactory.",
                "Configured gradle settings for local environment and builds across environments to ensure a common Gradle virsion is used.",
                "Used gradlew to execute Gradle tasks to clean, build, execute unit tests, troubleshoot dependency issues, lock dependency versions for a release, etc.",
                "Used gradle for development of common libraries and to publish artifacts to both my Maven local repository as well as remote repositories."
            ],
            "technologies": "Gradle, Maven",
            "iconUrl": "assets/images/gradle.PNG",
            "iconAltTxt": "Gradle logo"
        },
        {
            "title": "Java",
            "highlights": [
                "Deep understanding of Java core to develop solid, clean, functional code.",
                "Experience configuring log4j2 and other logging frameworks to provide robust, traceable application logs without a negative performance impact.",
                "Deep understanding of object oriented principles including polymorphism, heirarchy, and inheritance.",
                "Deep understanding of the different modifiers, of interfaces, of abstract classes and classes, of object, of generics, of packages and package structure.",
                "Experience with test driven development, developing robust/exhaustive unit tests, and leveraging unit testing frameworks and libraries like JUnit, Hamcrest, Mockito, and AssertJ.",
                "Maintained Java keystores and truststores to import certificates for server and client connectivity.",
                "Efficiently maintained git repositories using appropriate git commands to maintain branches and push code changes. Common commands used include fetch, pull, push, commit, rebase interactively, merge, etc."
            ],
            "technologies": "Java core, Spring/Spring Boot, Frameworks, libraries, J2EE",
            "iconUrl": "assets/images/java.PNG",
            "iconAltTxt": "Java logo"
        },
        {
            "title": "Agile",
            "highlights": [
                "Understanding of ever stage of the software development live cycle.",
                "Experienced using JIRA to create and update issues such as epics, stories, bugs, subtasks, etc. to adequately and efficiently document and manage work.",
                "Understanding of how to manage the trilema (time, cost, quality) to deliver functionality in a strategic manner.",
                "Participated as a contributing team member in all Agile ceremonies including daily stand-ups, retrospectives, iteration planning, demos, etc.",
                "As a feature lead, worked with scrum masters and product owners to understand line of business requirements and to lead develop and release of those features."
            ],
            "technologies": "SDLC, Agile methodologies, Scrum, Kanban, JIRA",
            "iconUrl": "assets/images/agile.PNG",
            "iconAltTxt": "Agile methodologies logo"
        },
        {
            "title": "Amazon Web Services",
            "highlights": [
                "Selecting, launching and configuring linux server instances.",
                "Start, stop, and restart intances as required.",
                "Remotely SSH into AWS linux server instances to configure as webserver.",
                "SFTP files to and from AWS servers as required.",
                "Create new users and manage privileges to enforce least required privileges required by users.",
                "Configure multi-factor authentication for root and user accounts.",
                "Acquire and manage web domains.",
                "Configure DNS records to map domains and subdomains to public IP addresses.",
                "Configure DNS records to map multiple domains and subdomains to the same public IP address."
            ],
            "technologies": "EC2, IAM, Route53",
            "iconUrl": "assets/images/aws.png",
            "iconAltTxt": "AWS logo"
        },
        {
            "title": "Wordpress Development",
            "highlights": [
                "Installing and configuring Wordpress on linux servers running an Apache or nginx web server.",
                "Install and customize wordpress themes to match a specified color pallet and typography.",
                "Build pages and posts.  Upload and manage content to site.",
                "Ensure strong search engine optimization (SEO) for each page.",
                "Configure and build site menues, logos, favicons, etc. for clear branding."
            ],
            "technologies": "Wordpress themes, Wordpress plugins, XAMPP, LAMP, MySQL, HTML, CSS, PHP, Google ReCAPTCHA, Google Analytics, Google Adsense, SEO",
            "iconUrl": "assets/images/wordpress.png",
            "iconAltTxt": "Wordpress logo"
        }
    ]
}